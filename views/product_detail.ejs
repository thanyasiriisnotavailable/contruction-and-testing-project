<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- font google -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Anton&display=swap"
      rel="stylesheet"
    />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
      crossorigin="anonymous"
    />

    <!-- Font Awesom -->
    <script
      src="https://kit.fontawesome.com/752c6ea0dd.js"
      crossorigin="anonymous"
    ></script>
    <title>Product</title>
    <link rel="stylesheet" href="/CSS/style.css" />
    <style>
      .cart-dropdown {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
        right: 0;
        margin-right: 5px;
        width: 50%;
        text-align: center;
      }

      .cart-dropdown a:hover {
        background-color: #f2f2f2;
      }

      .cart-dropdown.active {
        display: block;
      }

      .cart-icon i {
        margin-right: 5px;
      }

      #cart-count {
        position: absolute;
        top: -5px;
        right: -1px;
        background-color: red;
        color: white;
        border-radius: 60%;
        padding: 5px 8px;
        font-size: 10px;
        font-weight: bold;
      }

      .btnproduct {
        color: black;
      }

      .size-option {
        cursor: pointer;
        margin-right: 5px;
        padding: 15px;
      }

      .selected-size {
        border-bottom: 2px solid black;
        border-radius: 5px;
        padding: 10px;
      }

      #container button {
        border: none;
        padding: 10px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 4px;
        color: black;
        position: relative;
        left: -2px;
        margin-top: 40px;
      }

      .bagimg {
        width: 35px;
        height: auto;
        margin-bottom: 5px;
        margin-left: 5px;
      }

      .cart-item p {
        font-size: 20px;
      }

      .product-container {
        display: flex;
        align-items: center;
        /* Align items vertically */
        margin-left: 0;
      }

      .product-details {
        flex: 1;
        margin-right: 100px;
        margin-left: 20px;
        margin-top: 10px;
        text-align: center;
      }

      .add-to-cart-btn {
        white-space: nowrap;
        /* Prevent text from wrapping */
        margin-top: 40px;
        /* Adjust margin as needed */
        width: 250px;
        margin-right: 400px;
      }

      .cart-item img {
        max-width: 200px;
        height: auto;
      }

      .cart-item-content {
        display: flex;
        align-items: center;
        justify-content: left;
      }

      .delete {
        margin-top: 10px;
      }

      .product-details h2 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 100%;
        font-size: 20px;
      }

      .cart-item-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .product-description {
        margin-right: 10px;
      }

      .product-price {
        flex-shrink: 0;
        text-align: right;
      }

      /* Adjust the positioning of the remove button */
      .cart-item-content {
        position: relative;
      }

      .delete {
        position: absolute;
        top: 0;
        left: 350px;
        margin-top: 220px;
        /* Add margin if needed */
        background: none;
        /* Remove background */
        border: none;
        /* Remove border */
        padding: 0;
        /* Remove padding */
        text-decoration: underline;
        /* Add underline */
        cursor: pointer;
        /* Change cursor to pointer */
      }

      @media (max-width: 767px) {
        .product-container {
          display: flex;
          flex-direction: column;
          margin-left: 0;
          width: 100%;
        }

        .product-container img {
          order: -1;
          /* Move the image to the top */
          margin-bottom: 10px;
          /* Add some space between image and details */
          margin: 0;
          /* Reset margin */
          padding: 0;
          /* Reset padding */
          align-items: center;
        }

        .description-price {
          order: 2;
          /* Move the description and price below */
        }
      }
    </style>
  </head>

  <body>
    <!-- Navbar with cart and wishlist -->
    <%- include('partials/navbar'); %>

    <form id="addToCartForm" action="/add_to_cart" method="post">
      <div class="product-container">
        <img
          src="<%= product.product_images1 %>"
          width="530px"
          height="640px"
          alt="Product Image"
        />
        <div class="product-details">
          <input
            type="hidden"
            id="productName"
            name="product_name"
            value="<%= product.product_name %>"
          />
          <input type="hidden" id="productSize" name="product_size" value="" />
          <input
            type="hidden"
            id="productQuantity"
            name="product_quantity"
            value="0"
          />
          <input
            type="hidden"
            id="productPrice"
            name="product_price"
            value="<%= product.product_price %>"
          />
          <h2><%= product.product_name %></h2>
          <p><%= product.product_description %></p>
          <hr />
          <p><%= product.product_price %></p>
          <p>Size:</p>
          <p id="size-options">
            <span class="size-option">XS</span>
            <span class="size-option">S</span>
            <span class="size-option">M</span>
            <span class="size-option">L</span>
            <span class="size-option">XL</span>
            <span class="size-option">XXL</span>
          </p>
          <div id="container">
            <button id="decrementBtn" type="button">-</button>
            <span class="number" style="margin-top: 30px">0</span>
            <button id="incrementBtn" type="button">+</button>
          </div>
          <button class="btnproduct add-to-cart-btn">
            <img class="bagimg" src="/images/Bag_alt.png" />ADD TO CART
          </button>
        </div>
      </div>
    </form>

    <%- include('partials/SignInForm') %> <%- include('partials/footer') %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Get the quantity display element
        const numberElement = document.querySelector(".number");

        // Get the increment and decrement buttons
        const incrementBtn = document.getElementById("incrementBtn");
        const decrementBtn = document.getElementById("decrementBtn");

        // Initialize the quantity
        let number = parseInt(numberElement.textContent);

        // Function to update the displayed quantity
        function updateNumber() {
          numberElement.textContent = number;
          document.getElementById("productQuantity").value = number; // Update product quantity
        }

        // Event listener for the increment button
        incrementBtn.addEventListener("click", function () {
          number++;
          updateNumber();
        });

        // Event listener for the decrement button
        decrementBtn.addEventListener("click", function () {
          if (number > 0) {
            number--;
            updateNumber();
          }
        });
      });

      document.addEventListener("DOMContentLoaded", function () {
        const cartIcon = document.getElementById("cart-icon");
        const cartDropdown = document.getElementById("cart-dropdown");
        const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");
        const cartCount = document.getElementById("cart-count");

        cartIcon.addEventListener("click", function () {
          cartDropdown.classList.toggle("active");
        });

        let itemCount = number;

        addToCartButtons.forEach((button) => {
          button.addEventListener("click", function () {
            itemCount++;
            cartCount.textContent = itemCount;
            cartCount.style.display = "block";
          });
        });
        document.addEventListener("click", function (event) {
          const isClickInsideCart =
            cartIcon.contains(event.target) ||
            cartDropdown.contains(event.target);
          if (!isClickInsideCart) {
            cartDropdown.classList.remove("active");
          }
        });
      });
    </script>
    <!-- Cross sign -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const sizeOptions = document.querySelectorAll(".size-option");
        const numberElement = document.querySelector(".number");

        let number = parseInt(numberElement.textContent);

        sizeOptions.forEach((option) => {
          option.addEventListener("click", function () {
            sizeOptions.forEach((opt) => opt.classList.remove("selected-size"));
            this.classList.add("selected-size");
            document.getElementById("productSize").value = this.textContent;
            document.getElementById("productQuantity").value = number; // Update product quantity
          });
        });

        // Function to update the product quantity
        function updateNumber() {
          numberElement.textContent = number;
          document.getElementById("productQuantity").value = number; // Update product quantity
        }

        // Increment button event listener
        document
          .getElementById("incrementBtn")
          .addEventListener("click", function () {
            number++;
            updateNumber();
          });

        // Decrement button event listener
        document
          .getElementById("decrementBtn")
          .addEventListener("click", function () {
            if (number > 0) {
              number--;
              updateNumber();
            }
          });
      });
    </script>

    <!-- check -->
    <script>
      function removeCartItem(cartId) {
        document.getElementById("removeForm" + cartId).submit();
      }

      document.addEventListener("DOMContentLoaded", function () {
        const numberElement = document.getElementById("number");
        const incrementBtn = document.getElementById("incrementBtn");
        const decrementBtn = document.getElementById("decrementBtn");

        let number = parseInt(numberElement.textContent);

        function updateNumber() {
          numberElement.textContent = number;
          document.getElementById("productQuantity").value = number; // Update product quantity
        }

        incrementBtn.addEventListener("click", function () {
          number++;
          updateNumber();
          updateQuantityOnServer(number); // Send update to server
        });

        decrementBtn.addEventListener("click", function () {
          if (number > 0) {
            number--;
            updateNumber();
            updateQuantityOnServer(number); // Send update to server
          }
        });

        function updateQuantityOnServer(newQuantity) {
          const cartId = numberElement.dataset.cartId; // Get cart ID from data attribute
          fetch("/update_quantity", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              cartId: cartId,
              newQuantity: newQuantity,
            }),
          })
            .then((response) => {
              if (response.ok) {
                console.log("Quantity updated successfully");
              } else {
                console.error(
                  "Failed to update quantity:",
                  response.statusText
                );
              }
            })
            .catch((error) => {
              console.error("Error updating quantity:", error);
            });
        }
      });
    </script>
  </body>
</html>
